/* Copyright Â© 2017 VMware, Inc. All Rights Reserved.
   SPDX-License-Identifier: BSD-2-Clause

   Generated by: https://github.com/swagger-api/swagger-codegen.git */

package trust

type X509Certificate struct {

	// One of the DSA cryptographic algorithm's strength parameters, base
	DsaPublicKeyG string `json:"dsa_public_key_g,omitempty"`

	// One of the DSA cryptographic algorithm's strength parameters, prime
	DsaPublicKeyP string `json:"dsa_public_key_p,omitempty"`

	// One of the DSA cryptographic algorithm's strength parameters, sub-prime
	DsaPublicKeyQ string `json:"dsa_public_key_q,omitempty"`

	// One of the DSA cryptographic algorithm's strength parameters
	DsaPublicKeyY string `json:"dsa_public_key_y,omitempty"`

	// True if this is a CA certificate
	IsCa bool `json:"is_ca,omitempty"`

	// True if this certificate is valid
	IsValid bool `json:"is_valid,omitempty"`

	// the certificate issuers complete distinguished name
	Issuer string `json:"issuer,omitempty"`

	// the certificate issuer's common name
	IssuerCn string `json:"issuer_cn,omitempty"`

	// the time in epoch milliseconds at which the certificate becomes invalid
	NotAfter int64 `json:"not_after,omitempty"`

	// the time in epoch milliseconds at which the certificate becomes valid
	NotBefore int64 `json:"not_before,omitempty"`

	// Cryptographic algorithm used by the public key for data encryption
	PublicKeyAlgo string `json:"public_key_algo,omitempty"`

	// size measured in bits of the public/private keys used in a cryptographic algorithm
	PublicKeyLength int64 `json:"public_key_length,omitempty"`

	// An RSA public key is made up of the modulus and the public exponent. Exponent is a power number
	RsaPublicKeyExponent string `json:"rsa_public_key_exponent,omitempty"`

	// An RSA public key is made up of the modulus and the public exponent. Modulus is wrap around number
	RsaPublicKeyModulus string `json:"rsa_public_key_modulus,omitempty"`

	// certificate's serial number
	SerialNumber string `json:"serial_number,omitempty"`

	// the signature value(the raw signature bits) used for signing and validate the cert
	Signature string `json:"signature,omitempty"`

	// the algorithm used by the Certificate Authority to sign the certificate
	SignatureAlgorithm string `json:"signature_algorithm,omitempty"`

	// the certificate owners complete distinguished name
	Subject string `json:"subject,omitempty"`

	// the certificate owner's common name
	SubjectCn string `json:"subject_cn,omitempty"`

	// Certificate version (default v1)
	Version string `json:"version,omitempty"`
}
